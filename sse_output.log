info: SSE Counter example starting on http://localhost:3000
info: Visit http://localhost:3000 to see the counter
debug: libxev components initialized successfully
debug: New connection accepted
debug: [Connection Created] Client port: 0, connection created, total connections: 1
debug: [SUBMIT READ] conn_id=0
debug: Connection established, total connections: 1
debug: [CB READ] conn_id=0, compl_ptr=0x104f20108
debug: Received 83 bytes from connection
debug: SSE mode detected, setting up streaming connection
debug: [SSE] writeChunk called: 124 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 124 bytes, total queued: 124, queue size: 1
debug: [SSE] Data preview: HTTP/1.1 200 OK
Cache-Control: no-cache
X-Accel-Buffering: no
Content-Type: text/event-stream
Co
debug: [SSE] processWriteQueue: queue size=1, bytes_queued=124
debug: [SSE] Writing chunk: 124 bytes
debug: SSE headers sent through streaming connection, 124 bytes
debug: SSE callback scheduled for execution
debug: Executing SSE streaming callback
info: SSE counter streaming started
debug: [SSE] sendEvent called, closed=false, event_count=0
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 0
data: 0


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 154, queue size: 2
debug: [SSE] Data preview: event: counter
id: 0
data: 0


debug: [SSE] Event sent successfully, total events: 1
debug: [SSE] sendEvent called, closed=false, event_count=1
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 1
data: 1


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 184, queue size: 3
debug: [SSE] Data preview: event: counter
id: 1
data: 1


debug: [SSE] Event sent successfully, total events: 2
debug: [SSE] sendEvent called, closed=false, event_count=2
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 2
data: 2


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 214, queue size: 4
debug: [SSE] Data preview: event: counter
id: 2
data: 2


debug: [SSE] Event sent successfully, total events: 3
debug: [SSE] sendEvent called, closed=false, event_count=3
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 3
data: 3


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 244, queue size: 5
debug: [SSE] Data preview: event: counter
id: 3
data: 3


debug: [SSE] Event sent successfully, total events: 4
debug: [SSE] sendEvent called, closed=false, event_count=4
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 4
data: 4


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 274, queue size: 6
debug: [SSE] Data preview: event: counter
id: 4
data: 4


debug: [SSE] Event sent successfully, total events: 5
debug: [SSE] sendEvent called, closed=false, event_count=5
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 5
data: 5


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 304, queue size: 7
debug: [SSE] Data preview: event: counter
id: 5
data: 5


debug: [SSE] Event sent successfully, total events: 6
debug: [SSE] sendEvent called, closed=false, event_count=6
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 6
data: 6


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 334, queue size: 8
debug: [SSE] Data preview: event: counter
id: 6
data: 6


debug: [SSE] Event sent successfully, total events: 7
debug: [SSE] sendEvent called, closed=false, event_count=7
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 7
data: 7


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 364, queue size: 9
debug: [SSE] Data preview: event: counter
id: 7
data: 7


debug: [SSE] Event sent successfully, total events: 8
debug: [SSE] sendEvent called, closed=false, event_count=8
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 8
data: 8


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 394, queue size: 10
debug: [SSE] Data preview: event: counter
id: 8
data: 8


debug: [SSE] Event sent successfully, total events: 9
debug: [SSE] sendEvent called, closed=false, event_count=9
debug: [SSE] Formatted event: 30 bytes, preview: event: counter
id: 9
data: 9


debug: [SSE] writeChunk called: 30 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 30 bytes, total queued: 424, queue size: 11
debug: [SSE] Data preview: event: counter
id: 9
data: 9


debug: [SSE] Event sent successfully, total events: 10
debug: [SSE] sendEvent called, closed=false, event_count=10
debug: [SSE] Formatted event: 38 bytes, preview: event: done
data: Counter completed!


debug: [SSE] writeChunk called: 38 bytes, closed=false, streaming=true
debug: [SSE] Data queued: 38 bytes, total queued: 462, queue size: 12
debug: [SSE] Data preview: event: done
data: Counter completed!


debug: [SSE] Event sent successfully, total events: 11
info: SSE counter streaming completed
debug: [SSE] close called, already closed=false, event_count=11
debug: [SSE] Writer closed after 11 events
debug: [SSE] Write complete: 124 bytes written
debug: [SSE] Removed from queue, remaining: 11 items, 338 bytes
debug: [SSE] processWriteQueue: queue size=11, bytes_queued=338
debug: [SSE] Writing chunk: 30 bytes
debug: [SSE] Write complete: 30 bytes written
debug: [SSE] Removed from queue, remaining: 10 items, 308 bytes
debug: [SSE] processWriteQueue: queue size=10, bytes_queued=308
debug: [SSE] Writing chunk: 30 bytes
unexpected errno: 9
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/debug.zig:337:31: 0x104bd62eb in dumpCurrentStackTrace (sse_counter)
        writeCurrentStackTrace(stderr, debug_info, io.tty.detectConfig(io.getStdErr()), start_addr) catch |err| {
                              ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/posix.zig:7506:40: 0x104bf0ba3 in unexpectedErrno (sse_counter)
        std.debug.dumpCurrentStackTrace(null);
                                       ^
/Users/ojash/.cache/zig/p/libxev-0.0.0-86vtcx8dEwDfl6p4tGVxCygft8oOsggfba9JO-k28J2x/src/backend/kqueue.zig:1345:56: 0x104c7db1b in syscall_result (sse_counter)
                    else => |err| posix.unexpectedErrno(err),
                                                       ^
/Users/ojash/.cache/zig/p/libxev-0.0.0-86vtcx8dEwDfl6p4tGVxCygft8oOsggfba9JO-k28J2x/src/backend/kqueue.zig:257:48: 0x104c7bc87 in submit (sse_counter)
                    c.result = c.syscall_result(-@as(i32, @intCast(ev.data)));
                                               ^
/Users/ojash/.cache/zig/p/libxev-0.0.0-86vtcx8dEwDfl6p4tGVxCygft8oOsggfba9JO-k28J2x/src/backend/kqueue.zig:352:24: 0x104c7f943 in tick (sse_counter)
        try self.submit();
                       ^
/Users/ojash/.cache/zig/p/libxev-0.0.0-86vtcx8dEwDfl6p4tGVxCygft8oOsggfba9JO-k28J2x/src/backend/kqueue.zig:303:62: 0x104c81287 in run (sse_counter)
            .until_done => while (!self.done()) try self.tick(1),
                                                             ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/src/server/adapters/libxev.zig:546:32: 0x104c818d3 in listen (sse_counter)
            try self.loop.?.run(.until_done);
                               ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/src/server/adapter.zig:24:36: 0x104c81d27 in listen (sse_counter)
            return self.impl.listen(options);
                                   ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/src/server/adapter.zig:147:49: 0x104c81e7f in listen (sse_counter)
            .libxev => |*adapter| adapter.listen(options),
                                                ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/src/server/serve.zig:44:34: 0x104c81f2f in listen (sse_counter)
        return self.server.listen(options);
                                 ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/src/server/serve.zig:72:22: 0x104c82043 in serve (sse_counter)
    try server.listen(options);
                     ^
/Users/ojash/Documents/AdaptWorkSpaces/h3z/examples/sse_counter.zig:26:18: 0x104c8243b in main (sse_counter)
    try h3z.serve(&app, h3z.ServeOptions{
                 ^
/opt/homebrew/Cellar/zig/0.14.1/lib/zig/std/start.zig:660:37: 0x104c82a2f in main (sse_counter)
            const result = root.main() catch |err| {
                                    ^
???:?:?: 0x1862eab97 in ??? (???)
???:?:?: 0x0 in ??? (???)
